// 자바 스크립트 구문
// 주석은 이렇게
// 보통 <script> 태그는 body 최하단에 위치


자바스크립트 코드 적용 방법
1. <script> 태그 추가해서 js 코드 포함시키는 방법
2. 외부 .js 파일을 만들어두고 파일에 포함시키는 방법


* 출력문 (4가지가 존재)

alert(); :: 알림창 또는 경고창 출력
console.log(); :: 콘솔창 출력
document.write :: HTML 페이지 상 출력
innerhtml :: bjy 변수 - id가 "jy"인 요소 연결해서 출력해 줌 
getElementById(""); 키워드 숙지 


// alert() :: 알림창 또는 경고창 출력
// console.log() :: 콘솔 상 출력

// 자료형 :: number, String, boolean
let num = 99*99;
const ch = "ㅇㅅㅇ";
ch = "ㅡㅅㅡ"; => 상수의 경우, 값 변경 x

js파일은 출력문 등의 명령문을 그대로 작성한다.

// typeof() => 특정 값의 타입 반환

// "str" + "ing" = "string"
// "string"[1] = 't'
// "string".length = 6

// "===" :: "같다"

// 상수(const)와 변수(let, var) 최근에는 let을 많이 사용하는 추세
// 상수는 한 번 선언되면 값 변경 X, 변수는 값 변경 O 
// 자바스크립트 같은 경우에는, 초기화하는 값에 따라 타입을 자동으로 부여할 수 있음
// [타입명] [변수명] = [값];
// const [타입명] [변수명] = [값];


산술 연산자 :: +, -, *, /, %
대입 연산자 :: =
비교 연산자 :: <, >, <=, >=
==, != :: (값이 같다, 다르다)
===, !== (값과 타입이 모두 같다, 값 또는 타입이 다르다)
논리 연산자 :: &&, ||, !

삼항 연산자 ? (if, else 역할을 같이 하는 연산자)
[조건식] ? [참일 때 수행할 명령어] : [거짓일 때 수행 할 명령어]


typeof() :: 특정 값의 자료형 반환 
강제 형변환 (Number(), String(), Boolean())
let hello = "안뇽";     // hello라는 변수가 자동으로 string형으로 변환됨
NaN :: "Not a Number" -> 숫자 연산이 잘 이루어지지 않았을 때 나타난다.
console.log(typeof(Number('A'))); // 이렇게 적으면 콘솔에서 number 출력이 된다.


// 입력문 :: prompt(), confirm()

prompt() :: 문자형 타입 입력 받는데 사용
prompt("질문지", "기본값");

 let name = prompt("이름을 입력하세요.", "(ex)백정윤");
        console.log(typeof(name));      // 결과값 : string

 let input = prompt("나이를 입력하세요.");
        console.log(typeof(input));    // 결과값 : string
        
        let age = Number(input);      // 입력값을 숫자형으로 바꾸어 새로운 변수에 삽입
        console.log(typeof(age));

confirm() :: Bool(true / false 중 하나 선택) 타입 입력 받는데에만 사용
confirm("질문지");


배열 :: 여러 개의 값을 하나의 이름으로 저장하는 공간
js 같은 경우엔, 자료형의 제약이 없고 공간의 제약도 없음
배열 이름이랑 "배열이다" 라는 것만 명시하면 사용에 지장없음

"introduce라는 변수는 배열이다." 라고 선언한 것.
        let introduce = []; 

임의의 위치를 지정해서 값을 넣을 수 있음
introduce[1] = "apple";

push()를 통해서 순차적으로 삽입
        introduce.push("백정윤");
        introduce.push(26);
        introduce.push(true);

배열을 선언 및 초기화 방법
1. let / const 배열명 = [값1, 값2, ...];
2. let / const 배열명 = Array(값1, 값2, ...);
3. let / const 배열명 = new array(값1, 값2, ...);

배열에서 값을 삭제 => delete
        console.log(intro1[0]);
        delete intro1[0];


함수 :: "특정 기능을 하는 명령문들의 집합"
함수 구현 
function 함수명(매개변수명, ...){
     명령문들; (return형도 포함)
}

객체 
객체 선언

let 객체명 = {
멤버명 : 멤버값,
 ...
};

함수명 : function(매개변수명, ...)
{
명령문들;
}

객체 멤버 사용 :: 객체명.멤버명, 객체명["멤버명"]
