css 파일은 화면 디자인을 담당한다. 
css 파일에 작성된대로 규칙적으로 html 파일을 작성했다면,
여러 html 파일에 대해서 하나의 css 파일로 통일적으로 스타일 적용이 가능
20개의 html 파일이 규칙적으로 작성이 잘 되어있으면 css 파일 하나로도 스타일 적용이 동시에 적용 가능하다.
p[태그]*5하면 p태그 5줄 출력됨
input*3 하면 input 양식 3줄 자동 출력됨

선택자 :: 특정 조건에 맞는 태그를 선택하는 구문
    => 여러개를 복합적으로 작성 O, 여러 태그들을 나열해서 작성할 수도 있음.
선택자1, 선택자2 { 
    속성명 1 :: 속성값1;    -> 선언문1
    속셩명 2 :: 속성값2;    -> 선언문2
    ...
}

선언문 :: 적용할 스타일 정의
선택자 { 
    속성명 1 :: 속성값1;    -> 선언문1
    속셩명 2 :: 속성값2;    -> 선언문2
    ...
}


CSS 스타일 적용 방법
1. 외부 CSS 파일을 html 파일에 적용
    <head>에 아래 구문을 작성해야 한다.
       <link rel = "stylesheet" href = "css파일명">
2. html 파일 내부에 <style> 삽입하여 스타일 적용
3. 택에 직접적으로 style 속성 부여



전체 선택자 :: html 페이지 안에 있는 모든 태그들을 선택 
ctrl + shfit ::전체 주석

태그 선택자 :: html에 포함되어 있는 특정 태그들을 선택
아이디 선택자 :: 특정 아이디 값을 갖고 있는 태그 선택
"#" 기호를 사용해서 선택
아래 구문 같은 경우엔, id값이 반드시 first_h1이어야만 적용 (first_h1_auto여도 적용x)


클래스 선택자 :: 각 태그들의 class값들 중 특정 값이 있는 태그 선택 
"." 기호를 사용해서 선택
class값 중 지정된 값이 포함되어 있기만 한다면 적용된다.


css 파일 작성할 시에는, 
대략적인 스타일 설정을 파일 윗부분에 작성하고
구체적인 스타일 설정을 파일 아래 부분에 작성하면 좋다.


후손 선택자 :: 특정 태그 안에 있는 후손을 선택한다.
[선택자1] [선택자2] {선언문들}      (공백을 이용하여 후손을 선택)

자손 선택자 :: 특정 태그 "바로 안에 있는" 자손 (직속 후손)을 선택
 [선택자1]>[선택자2] {선언문들}   (> 기호 사용)

-- tbody 태그는 생략가능 -> table 태그의 직속 후손은 tbody밖에 없음
(그래서 만약 쓸 것 이라면 반드시 tbody를 명시해줘야 함)


<div id="header">
        <h3>헤더 안의 h3</h3> <!-- #header div의 후손 -->

<div>
 <p>헤더안의 p</p> <!-- #header div의 후손은 맞지만, 자손은 아닌 상태 -->

 <div id="para">
        <h3>본문 안의 h3</h3> <!-- # para div의 후손 -->


동위 연산자 :: +, ~ (형제 개념이라고 생각하면 됨)
[선택자1] + [선택자2] :: [선택자1] 바로 뒤에 위치하는 
[선택자2] 선택(시스템 상 반드시 하나만 선택될 수 밖에 없음) 
[선택자1] ~ [선택자2] :: [선택자1] 뒤에 위치하는 [선택자2] 선택 (복수로 선택이 될 수 있음)


transition :: "전환"과 관련한 스타일 부여 (애니메이션과 연결이 됨) 
/* 5px은 상하로, 25px은 좌우로 */
    padding : 5px 25px; /* 가로패딩, 세로패딩*/
 transition: all 2s; /* 전환과 관련한 모든 진행 시간을 2초로 지정한다 */


transition-timing-function : ease-in-out; /*전환 형식 :: 디폴트는 linear (일정한 속도로 변한다) */
    transition-delay : 1s; /* 1초 정도 가만히 있다가 전환을 수행한다. */


반응 선택자 :: 
    "active(마우스를 눌렀을 때 스타일 적용)" 
    "hover(커서를 갖다 댔을 때 스타일 적용)"
    [선택자]:hover/active {
        선언문들
    }

@keyframe 속성명: 애니메이션을 생성하는 키워드 
animation-duration : 3s; /* 지속 시간 */

상태 선택자 :: :checked, :focus, :enabled, :disabled
focus는 enabled 아래로 적용
타입이 체크박스인 input 태그를 체크 했을 때, div 스타일 정의
overflow : hidden은 공간이 모자를 때 아예 숨겨버림


문자 선택자 :: 지정된 태그에 있어서 특정 문자에 스타일 지정
시작 문자 선택자 :: ::first-letter, ::first-line
::selection -> 사용자가 임의로 드래그한 글자 선택


구조 선택자 :: first-child, last-child
h1:first-child => 첫번째로 나타내는 태그가 반드시 h1이어야만 적용
반드시 "지정된 위치에 지정된 태그가 있어야만" 스타일 적용 
        아니면 아닌거고...

구조 선택자 :: first-of-type, last-of-type
h1:first-of-type => 처음으로 나타난 h1 태그에 대해 스타일 적용


링크 선택자 :: :
        :link(href 속성값을 갖고 있는 a태그 선택)
        :visited(이미 지정된 링크를 방문한 태그) 

form 태그 :: 입력 양식 선언, 입력값 전송(submit 타입 input 필수 필요)
form 태그를 통해서 다른 html 파일을 불러올 수도 있음

form태그 속성 :: method(입력값 전송과 연관됨), action(다른 html 또는 url 불러옴)